// Mocks generated by Mockito 5.4.2 from annotations
// in frontend/test/usecase/match_with_opponent_usecase_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:frontend/domain/repository/match_make_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDocumentReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentReference<T> {
  _FakeDocumentReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MatchMakeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatchMakeRepository extends _i1.Mock
    implements _i3.MatchMakeRepository {
  MockMatchMakeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> addToWaitingList(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #addToWaitingList,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String?> getOldestWaitingUserId() => (super.noSuchMethod(
        Invocation.method(
          #getOldestWaitingUserId,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<void> removeFromWaitingList(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #removeFromWaitingList,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.DocumentReference<Object?>> createRoom(
          Map<String, dynamic>? roomData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRoom,
          [roomData],
        ),
        returnValue: _i4.Future<_i2.DocumentReference<Object?>>.value(
            _FakeDocumentReference_0<Object?>(
          this,
          Invocation.method(
            #createRoom,
            [roomData],
          ),
        )),
      ) as _i4.Future<_i2.DocumentReference<Object?>>);
  @override
  _i4.Future<String> createMatchedRoom(
    String? user1,
    String? user2,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMatchedRoom,
          [
            user1,
            user2,
          ],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  void observeWaitingList(
    String? waitingUserId,
    void Function(String)? onMatchFound,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #observeWaitingList,
          [
            waitingUserId,
            onMatchFound,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
